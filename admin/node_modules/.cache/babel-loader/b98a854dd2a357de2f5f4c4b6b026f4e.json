{"ast":null,"code":"const MovieReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_MOVIES_START\":\n      return {\n        movies: [],\n        isFetching: true,\n        error: false\n      };\n    case \"GET_MOVIES_SUCCESS\":\n      return {\n        movies: action.payload,\n        isFetching: false,\n        error: false\n      };\n    case \"GET_MOVIES_FAILURE\":\n      return {\n        movies: [],\n        isFetching: false,\n        error: true\n      };\n    case \"CREATE_MOVIE_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false\n      };\n    case \"CREATE_MOVIE_SUCCESS\":\n      return {\n        movies: [...state.movies, action.payload],\n        isFetching: false,\n        error: false\n      };\n    case \"CREATE_MOVIE_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true\n      };\n    case \"UPLOAD_MOVIE_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false\n      };\n    case \"UPLOAD_MOVIE_SUCCESS\":\n      return {\n        movies: state.movies.map(movie => movie._id === action.payload._id && action.payload),\n        isFetching: false,\n        error: false\n      };\n    case \"UPLOAD_MOVIE_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true\n      };\n    case \"DELETE_MOVIE_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false\n      };\n    case \"DELETE_MOVIE_SUCCESS\":\n      return {\n        movies: state.movies.filter(movie => movie._id !== action.payload),\n        isFetching: false,\n        error: false\n      };\n    case \"DELETE_MOVIE_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n_c = MovieReducer;\nexport default MovieReducer;\nvar _c;\n$RefreshReg$(_c, \"MovieReducer\");","map":{"version":3,"names":["MovieReducer","state","action","type","movies","isFetching","error","payload","map","movie","_id","filter"],"sources":["/Users/yashsalunke/Desktop/mernnetflix/admin/src/context/movieContext/MovieReducer.js"],"sourcesContent":["const MovieReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_MOVIES_START\":\n      return {\n        movies: [],\n        isFetching: true,\n        error: false,\n      };\n    case \"GET_MOVIES_SUCCESS\":\n      return {\n        movies: action.payload,\n        isFetching: false,\n        error: false,\n      };\n    case \"GET_MOVIES_FAILURE\":\n      return {\n        movies: [],\n        isFetching: false,\n        error: true,\n      };\n    case \"CREATE_MOVIE_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false,\n      };\n    case \"CREATE_MOVIE_SUCCESS\":\n      return {\n        movies: [...state.movies, action.payload],\n        isFetching: false,\n        error: false,\n      };\n    case \"CREATE_MOVIE_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true,\n      };\n    case \"UPLOAD_MOVIE_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false,\n      };\n    case \"UPLOAD_MOVIE_SUCCESS\":\n      return {\n        movies: state.movies.map(\n          (movie) => movie._id === action.payload._id && action.payload\n        ),\n        isFetching: false,\n        error: false,\n      };\n    case \"UPLOAD_MOVIE_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true,\n      };\n    case \"DELETE_MOVIE_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false,\n      };\n    case \"DELETE_MOVIE_SUCCESS\":\n      return {\n        movies: state.movies.filter((movie) => movie._id !== action.payload),\n        isFetching: false,\n        error: false,\n      };\n    case \"DELETE_MOVIE_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default MovieReducer;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,kBAAkB;MACrB,OAAO;QACLC,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,oBAAoB;MACvB,OAAO;QACLF,MAAM,EAAEF,MAAM,CAACK,OAAO;QACtBF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,oBAAoB;MACvB,OAAO;QACLF,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,oBAAoB;MACvB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,sBAAsB;MACzB,OAAO;QACLF,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACG,MAAM,EAAEF,MAAM,CAACK,OAAO,CAAC;QACzCF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,sBAAsB;MACzB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,oBAAoB;MACvB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,sBAAsB;MACzB,OAAO;QACLF,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACI,GAAG,CACrBC,KAAK,IAAKA,KAAK,CAACC,GAAG,KAAKR,MAAM,CAACK,OAAO,CAACG,GAAG,IAAIR,MAAM,CAACK,OAAO,CAC9D;QACDF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,sBAAsB;MACzB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,oBAAoB;MACvB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,sBAAsB;MACzB,OAAO;QACLF,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACO,MAAM,CAAEF,KAAK,IAAKA,KAAK,CAACC,GAAG,KAAKR,MAAM,CAACK,OAAO,CAAC;QACpEF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,sBAAsB;MACzB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH;MACE,OAAO;QAAE,GAAGL;MAAM,CAAC;EAAC;AAE1B,CAAC;AAAC,KA/EID,YAAY;AAiFlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}