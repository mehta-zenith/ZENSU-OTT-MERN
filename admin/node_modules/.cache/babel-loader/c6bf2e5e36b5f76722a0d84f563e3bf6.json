{"ast":null,"code":"const ListReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_LISTS_START\":\n      return {\n        lists: [],\n        isFetching: true,\n        error: false\n      };\n    case \"GET_LISTS_SUCCESS\":\n      return {\n        lists: action.payload,\n        isFetching: false,\n        error: false\n      };\n    case \"GET_LISTS_FAILURE\":\n      return {\n        lists: [],\n        isFetching: false,\n        error: true\n      };\n    case \"CREATE_LIST_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false\n      };\n    case \"CREATE_LIST_SUCCESS\":\n      return {\n        lists: [...state.lists, action.payload],\n        isFetching: false,\n        error: false\n      };\n    case \"CREATE_LIST_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true\n      };\n    case \"UPLOAD_LIST_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false\n      };\n    case \"UPLOAD_LIST_SUCCESS\":\n      return {\n        lists: state.lists.map(list => list._id === action.payload._id && action.payload),\n        isFetching: false,\n        error: false\n      };\n    case \"UPLOAD_LIST_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true\n      };\n    case \"DELETE_LIST_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false\n      };\n    case \"DELETE_LIST_SUCCESS\":\n      return {\n        lists: state.lists.filter(list => list._id !== action.payload),\n        isFetching: false,\n        error: false\n      };\n    case \"DELETE_LIST_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n_c = ListReducer;\nexport default ListReducer;\nvar _c;\n$RefreshReg$(_c, \"ListReducer\");","map":{"version":3,"names":["ListReducer","state","action","type","lists","isFetching","error","payload","map","list","_id","filter"],"sources":["/Users/yashsalunke/Desktop/mernnetflix/admin/src/context/listContext/ListReducer.js"],"sourcesContent":["const ListReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_LISTS_START\":\n      return {\n        lists: [],\n        isFetching: true,\n        error: false,\n      };\n    case \"GET_LISTS_SUCCESS\":\n      return {\n        lists: action.payload,\n        isFetching: false,\n        error: false,\n      };\n    case \"GET_LISTS_FAILURE\":\n      return {\n        lists: [],\n        isFetching: false,\n        error: true,\n      };\n    case \"CREATE_LIST_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false,\n      };\n    case \"CREATE_LIST_SUCCESS\":\n      return {\n        lists: [...state.lists, action.payload],\n        isFetching: false,\n        error: false,\n      };\n    case \"CREATE_LIST_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true,\n      };\n    case \"UPLOAD_LIST_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false,\n      };\n    case \"UPLOAD_LIST_SUCCESS\":\n      return {\n        lists: state.lists.map(\n          (list) => list._id === action.payload._id && action.payload\n        ),\n        isFetching: false,\n        error: false,\n      };\n    case \"UPLOAD_LIST_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true,\n      };\n    case \"DELETE_LIST_START\":\n      return {\n        ...state,\n        isFetching: true,\n        error: false,\n      };\n    case \"DELETE_LIST_SUCCESS\":\n      return {\n        lists: state.lists.filter((list) => list._id !== action.payload),\n        isFetching: false,\n        error: false,\n      };\n    case \"DELETE_LIST_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        error: true,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default ListReducer;\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,iBAAiB;MACpB,OAAO;QACLC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,mBAAmB;MACtB,OAAO;QACLF,KAAK,EAAEF,MAAM,CAACK,OAAO;QACrBF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,mBAAmB;MACtB,OAAO;QACLF,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QACLF,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAK,EAAEF,MAAM,CAACK,OAAO,CAAC;QACvCF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QACLF,KAAK,EAAEH,KAAK,CAACG,KAAK,CAACI,GAAG,CACnBC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKR,MAAM,CAACK,OAAO,CAACG,GAAG,IAAIR,MAAM,CAACK,OAAO,CAC5D;QACDF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QACLF,KAAK,EAAEH,KAAK,CAACG,KAAK,CAACO,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKR,MAAM,CAACK,OAAO,CAAC;QAChEF,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QACL,GAAGL,KAAK;QACRI,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACT,CAAC;IACH;MACE,OAAO;QAAE,GAAGL;MAAM,CAAC;EAAC;AAE1B,CAAC;AAAC,KA/EID,WAAW;AAiFjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}